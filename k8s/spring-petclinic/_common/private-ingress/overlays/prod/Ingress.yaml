# Handles client(origin)_ip from public_elb cause private_elb doesn't know client(origin)_ip
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  annotations:
      # *.kurly.services: arn:aws:acm:ap-northeast-2:804823275049:certificate/d546d0f3-f5d3-4d1f-945f-46133cb020ce,
      # *.cloud.kurly.services: arn:aws:acm:ap-northeast-2:804823275049:certificate/f43f8b28-1404-446a-a2ec-b8454f9ccb23
    alb.ingress.kubernetes.io/certificate-arn: >
      arn:aws:acm:ap-northeast-2:804823275049:certificate/d546d0f3-f5d3-4d1f-945f-46133cb020ce,
      arn:aws:acm:ap-northeast-2:804823275049:certificate/f43f8b28-1404-446a-a2ec-b8454f9ccb23
    alb.ingress.kubernetes.io/group.name: play-internal-prod
    alb.ingress.kubernetes.io/listen-ports: '[{"HTTP": 8043}]'
    alb.ingress.kubernetes.io/load-balancer-attributes: >
      access_logs.s3.bucket=kurly-internal-access-log,
      access_logs.s3.enabled=true,
      access_logs.s3.prefix=prod/play
    alb.ingress.kubernetes.io/load-balancer-name: play-internal-prod
    alb.ingress.kubernetes.io/manage-backend-security-group-rules: 'true'
    alb.ingress.kubernetes.io/security-groups: '[elb]-play-internal' # Before creating ingress, you need to verify that you have created sg
    alb.ingress.kubernetes.io/tags: >
      Env=prod, Name=play-internal-prod, Team=play, Project=커머스 플랫폼 개발
    alb.ingress.kubernetes.io/target-group-attributes: 'deregistration_delay.timeout_seconds=60'
    alb.ingress.kubernetes.io/target-type: ip
    external-dns.alpha.kubernetes.io/exclude: "true" # Prevent registration from external-dns
  labels:
    app.kubernetes.io/name: play-8043
  name: play-8043
spec:
  rules:
    - { }
